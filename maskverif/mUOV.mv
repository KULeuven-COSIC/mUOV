(* ############ *)
(* ### mUOV ### *)
(* ############ *)

(* UOV (reduced) parameter set: m=3, l=4 *)

(* ### Setup ### *)

(* Set the verbosity level *)
verbose 0

(* ### FIRST-ORDER Gadgets ### *)


(* SecREF *)

proc SEC_REF_FO:
  inputs: a[0:1]
  outputs: b[0:1]
  randoms: r;
  
  b := a;
  b[0] := b[0] + r;
  b[1] := b[1] + r;
end

noglitch SNI SEC_REF_FO


(* SecDotProd *)

proc SEC_DOT_PROD_FO:
  inputs: x1[0:1], x2[0:1], x3[0:1],
  x4[0:1], y1[0:1], y2[0:1], y3[0:1],
  y4[0:1]
  outputs: z[0:1]
  shares: u[0:1], w[0:1]
  randoms: r;
  
  (* Cross-products *)
  u[0] := x1[0] * y1[1];
  u[1] := x1[1] * y1[0];
  w[0] := x1[0] * y1[0];
  w[1] := x1[1] * y1[1];
  
  u[0] := u[0] + (x2[0] * y2[1]);
  u[1] := u[1] + (x2[1] * y2[0]);
  w[0] := w[0] + (x2[0] * y2[0]);
  w[1] := w[1] + (x2[1] * y2[1]);
  
  u[0] := u[0] + (x3[0] * y3[1]);
  u[1] := u[1] + (x3[1] * y3[0]);
  w[0] := w[0] + (x3[0] * y3[0]);
  w[1] := w[1] + (x3[1] * y3[1]);
  
  u[0] := u[0] + (x4[0] * y4[1]);
  u[1] := u[1] + (x4[1] * y4[0]);
  w[0] := w[0] + (x4[0] * y4[0]);
  w[1] := w[1] + (x4[1] * y4[1]);
  
  (* Resharing *)
  u[0] := u[0] + r;
  u[1] := u[1] + r; 
  
  (* Compression *)
  z[0] := w[0] + u[0];
  z[1] := w[1] + u[1];
  
end

noglitch SNI SEC_DOT_PROD_FO


(* SecMatVec *)

proc SEC_MAT_VEC_FO:
  inputs: a11[0:1], a12[0:1],
  a13[0:1], a14[0:1], a21[0:1], 
  a22[0:1], a23[0:1], a24[0:1],
  a31[0:1], a32[0:1], a33[0:1], 
  a34[0:1], x1[0:1], x2[0:1],
  x3[0:1], x4[0:1]
  outputs: b1[0:1], b2[0:1],
  b3[0:1];
  
  b1 = SEC_DOT_PROD_FO(a11, a12, a13, 
  a14, x1, x2, x3, x4);
  b2 = SEC_DOT_PROD_FO(a21, a22, a23, 
  a24, x1, x2, x3, x4);
  b3 = SEC_DOT_PROD_FO(a31, a32, a33, 
  a34, x1, x2, x3, x4);
  
end

noglitch SNI SEC_MAT_VEC_FO


(* SecQuad *)

proc SEC_QUAD_FO:
  public inputs: p111, p112, p113, 
  p114, p121, p122, p123, p124, p131, 
  p132, p133, p134, p141, p142, p143,
  p144, p211, p212, p213, p214, p221, 
  p222, p223, p224, p231, p232, p233, 
  p234, p241, p242, p243, p244, p311, 
  p312, p313, p314, p321, p322, p323, 
  p324, p331, p332, p333, p334, p341, 
  p342, p343, p344
  inputs: x1[0:1], x2[0:1],
  x3[0:1], x4[0:1]
  outputs: y1[0:1], y2[0:1],
  y3[0:1]
  shares: t11[0:1], t12[0:1],
  t13[0:1], t21[0:1], t22[0:1],
  t23[0:1], t31[0:1], t32[0:1],
  t33[0:1], t41[0:1], t42[0:1],
  t43[0:1], s1[0:1], s2[0:1],
  s3[0:1], s4[0:1];
  
  s1 = SEC_REF_FO(x1);
  s2 = SEC_REF_FO(x2);
  s3 = SEC_REF_FO(x3);
  s4 = SEC_REF_FO(x4);
  
  t11[0] := p111 * x1[0] + p112 * x2[0] + p113 * x3[0] + p114 * x4[0];
  t11[1] := p111 * x1[1] + p112 * x2[1] + p113 * x3[1] + p114 * x4[1];
  t21[0] := p121 * x1[0] + p122 * x2[0] + p123 * x3[0] + p124 * x4[0];
  t21[1] := p121 * x1[1] + p122 * x2[1] + p123 * x3[1] + p124 * x4[1];
  t31[0] := p131 * x1[0] + p132 * x2[0] + p133 * x3[0] + p134 * x4[0];
  t31[1] := p131 * x1[1] + p132 * x2[1] + p133 * x3[1] + p134 * x4[1];
  t41[0] := p141 * x1[0] + p142 * x2[0] + p143 * x3[0] + p144 * x4[0];
  t41[1] := p141 * x1[1] + p142 * x2[1] + p143 * x3[1] + p144 * x4[1];
  
  t12[0] := p211 * x1[0] + p212 * x2[0] + p213 * x3[0] + p214 * x4[0];
  t12[1] := p211 * x1[1] + p212 * x2[1] + p213 * x3[1] + p214 * x4[1];
  t22[0] := p221 * x1[0] + p222 * x2[0] + p223 * x3[0] + p224 * x4[0];
  t22[1] := p221 * x1[1] + p222 * x2[1] + p223 * x3[1] + p224 * x4[1];
  t32[0] := p231 * x1[0] + p232 * x2[0] + p233 * x3[0] + p234 * x4[0];
  t32[1] := p231 * x1[1] + p232 * x2[1] + p233 * x3[1] + p234 * x4[1];
  t42[0] := p241 * x1[0] + p242 * x2[0] + p243 * x3[0] + p244 * x4[0];
  t42[1] := p241 * x1[1] + p242 * x2[1] + p243 * x3[1] + p244 * x4[1];
  
  t13[0] := p311 * x1[0] + p312 * x2[0] + p313 * x3[0] + p314 * x4[0];
  t13[1] := p311 * x1[1] + p312 * x2[1] + p313 * x3[1] + p314 * x4[1];
  t23[0] := p321 * x1[0] + p322 * x2[0] + p323 * x3[0] + p324 * x4[0];
  t23[1] := p321 * x1[1] + p322 * x2[1] + p323 * x3[1] + p324 * x4[1];
  t33[0] := p331 * x1[0] + p332 * x2[0] + p333 * x3[0] + p334 * x4[0];
  t33[1] := p331 * x1[1] + p332 * x2[1] + p333 * x3[1] + p334 * x4[1];
  t43[0] := p341 * x1[0] + p342 * x2[0] + p343 * x3[0] + p344 * x4[0];
  t43[1] := p341 * x1[1] + p342 * x2[1] + p343 * x3[1] + p344 * x4[1];
  
  (y1, y2, y3) = SEC_MAT_VEC_FO(t11, t21, t31, 
  t41, t12, t22, t32, t42, t13, t23, t33,
  t43, s1, s2, s3, s4);
  
end

noglitch SNI SEC_QUAD_FO


(* mCompactKeyGen *)

proc M_COMPACT_KEYGEN_FO:
  public inputs: p111, p112, p113, 
  p114, p121, p122, p123, p124, p131, 
  p132, p133, p134, p141, p142, p143,
  p144, p211, p212, p213, p214, p221, 
  p222, p223, p224, p231, p232, p233, 
  p234, p241, p242, p243, p244, p311, 
  p312, p313, p314, p321, p322, p323, 
  p324, p331, p332, p333, p334, p341, 
  p342, p343, p344, p2111, p2112,
  p2113, p2121, p2122, p2123, p2131,
  p2132, p2133, p2141, p2142, p2143,
  p2211, p2212, p2213, p2221, p2222, 
  p2223, p2231, p2232, p2233, p2241, 
  p2242, p2243, p2311, p2312, p2313, 
  p2321, p2322, p2323, p2331, p2332, 
  p2333, p2341, p2342, p2343
  inputs: o11[0:1], o12[0:1], o13[0:1], 
  o21[0:1], o22[0:1], o23[0:1],
  o31[0:1], o32[0:1], o33[0:1],
  o41[0:1], o42[0:1], o43[0:1]
  outputs: c11[0:1], c12[0:1], c13[0:1],
  c22[0:1], c23[0:1], c33[0:1],
  c211[0:1], c212[0:1], c213[0:1],
  c222[0:1], c223[0:1], c233[0:1],
  c311[0:1], c312[0:1], c313[0:1],
  c322[0:1], c323[0:1], c333[0:1]
  shares: q11[0:1], q12[0:1], q13[0:1], 
  q21[0:1], q22[0:1], q23[0:1],
  q31[0:1], q32[0:1], q33[0:1],
  q41[0:1], q42[0:1], q43[0:1],
  a111[0:1], a112[0:1], a113[0:1], 
  a121[0:1], a122[0:1], a123[0:1],
  a131[0:1], a132[0:1], a133[0:1],
  a141[0:1], a142[0:1], a143[0:1],
  a211[0:1], a212[0:1], a213[0:1], 
  a221[0:1], a222[0:1], a223[0:1],
  a231[0:1], a232[0:1], a233[0:1],
  a241[0:1], a242[0:1], a243[0:1],
  a311[0:1], a312[0:1], a313[0:1], 
  a321[0:1], a322[0:1], a323[0:1],
  a331[0:1], a332[0:1], a333[0:1],
  a341[0:1], a342[0:1], a343[0:1],
  b111[0:1], b112[0:1], b113[0:1],
  b121[0:1], b122[0:1], b123[0:1], 
  b131[0:1], b132[0:1], b133[0:1],
  b211[0:1], b212[0:1], b213[0:1],
  b221[0:1], b222[0:1], b223[0:1], 
  b231[0:1], b232[0:1], b233[0:1],
  b311[0:1], b312[0:1], b313[0:1],
  b321[0:1], b322[0:1], b323[0:1], 
  b331[0:1], b332[0:1], b333[0:1];
  
  q11 = SEC_REF_FO(o11);
  q12 = SEC_REF_FO(o12);
  q13 = SEC_REF_FO(o13);
  q21 = SEC_REF_FO(o21);
  q22 = SEC_REF_FO(o22);
  q23 = SEC_REF_FO(o23);
  q31 = SEC_REF_FO(o31);
  q32 = SEC_REF_FO(o32);
  q33 = SEC_REF_FO(o33);
  q41 = SEC_REF_FO(o41);
  q42 = SEC_REF_FO(o42);
  q43 = SEC_REF_FO(o43);
  
  a111[0] := p2111 + p111 * o11[0] + p112 * o21[0] + p113 * o31[0] + p114 * o41[0];
  a111[1] := p111 * o11[1] + p112 * o21[1] + p113 * o31[1] + p114 * o41[1];
  a112[0] := p2112 + p111 * o12[0] + p112 * o22[0] + p113 * o32[0] + p114 * o42[0];
  a112[1] := p111 * o12[1] + p112 * o22[1] + p113 * o32[1] + p114 * o42[1];
  a113[0] := p2113 + p111 * o13[0] + p112 * o23[0] + p113 * o33[0] + p114 * o43[0];
  a113[1] := p111 * o13[1] + p112 * o23[1] + p113 * o33[1] + p114 * o43[1];
  a121[0] := p2121 + p121 * o11[0] + p122 * o21[0] + p123 * o31[0] + p124 * o41[0];
  a121[1] := p121 * o11[1] + p122 * o21[1] + p123 * o31[1] + p124 * o41[1];
  a122[0] := p2122 + p121 * o12[0] + p122 * o22[0] + p123 * o32[0] + p124 * o42[0];
  a122[1] := p121 * o12[1] + p122 * o22[1] + p123 * o32[1] + p124 * o42[1];
  a123[0] := p2123 + p121 * o13[0] + p122 * o23[0] + p123 * o33[0] + p124 * o43[0];
  a123[1] := p121 * o13[1] + p122 * o23[1] + p123 * o33[1] + p124 * o43[1];
  a131[0] := p2131 + p131 * o11[0] + p132 * o21[0] + p133 * o31[0] + p134 * o41[0];
  a131[1] := p131 * o11[1] + p132 * o21[1] + p133 * o31[1] + p134 * o41[1];
  a132[0] := p2132 + p131 * o12[0] + p132 * o22[0] + p133 * o32[0] + p134 * o42[0];
  a132[1] := p131 * o12[1] + p132 * o22[1] + p133 * o32[1] + p134 * o42[1];
  a133[0] := p2133 + p131 * o13[0] + p132 * o23[0] + p133 * o33[0] + p134 * o43[0];
  a133[1] := p131 * o13[1] + p132 * o23[1] + p133 * o33[1] + p134 * o43[1];
  a141[0] := p2141 + p141 * o11[0] + p142 * o21[0] + p143 * o31[0] + p144 * o41[0];
  a141[1] := p141 * o11[1] + p142 * o21[1] + p143 * o31[1] + p144 * o41[1];
  a142[0] := p2142 + p141 * o12[0] + p142 * o22[0] + p143 * o32[0] + p144 * o42[0];
  a142[1] := p141 * o12[1] + p142 * o22[1] + p143 * o32[1] + p144 * o42[1];
  a143[0] := p2143 + p141 * o13[0] + p142 * o23[0] + p143 * o33[0] + p144 * o43[0];
  a143[1] := p141 * o13[1] + p142 * o23[1] + p143 * o33[1] + p144 * o43[1];
  
  (b111, b121, b131) = SEC_MAT_VEC_FO(a111, a121, a131, a141, a112, a122, a132, a142, 
  a113, a123, a133, a143, q11, q21, q31, q41);
  (b112, b122, b132) = SEC_MAT_VEC_FO(a111, a121, a131, a141, a112, a122, a132, a142, 
  a113, a123, a133, a143, q12, q22, q32, q42);
  (b113, b123, b133) = SEC_MAT_VEC_FO(a111, a121, a131, a141, a112, a122, a132, a142, 
  a113, a123, a133, a143, q13, q23, q33, q43);
  
  c11 := b111;
  c12 := b112;
  c13 := b113;
  c22 := b122;
  c23 := b123;
  c33 := b133;
  
  a211[0] := p2211 + p211 * o11[0] + p212 * o21[0] + p213 * o31[0] + p214 * o41[0];
  a211[1] := p211 * o11[1] + p212 * o21[1] + p213 * o31[1] + p214 * o41[1];
  a212[0] := p2212 + p211 * o12[0] + p212 * o22[0] + p213 * o32[0] + p214 * o42[0];
  a212[1] := p211 * o12[1] + p212 * o22[1] + p213 * o32[1] + p214 * o42[1];
  a213[0] := p2213 + p211 * o13[0] + p212 * o23[0] + p213 * o33[0] + p214 * o43[0];
  a213[1] := p211 * o13[1] + p212 * o23[1] + p213 * o33[1] + p214 * o43[1];
  a221[0] := p2221 + p221 * o11[0] + p222 * o21[0] + p223 * o31[0] + p224 * o41[0];
  a221[1] := p221 * o11[1] + p222 * o21[1] + p223 * o31[1] + p224 * o41[1];
  a222[0] := p2222 + p221 * o12[0] + p222 * o22[0] + p223 * o32[0] + p224 * o42[0];
  a222[1] := p221 * o12[1] + p222 * o22[1] + p223 * o32[1] + p224 * o42[1];
  a223[0] := p2223 + p221 * o13[0] + p222 * o23[0] + p223 * o33[0] + p224 * o43[0];
  a223[1] := p221 * o13[1] + p222 * o23[1] + p223 * o33[1] + p224 * o43[1];
  a231[0] := p2231 + p231 * o11[0] + p232 * o21[0] + p233 * o31[0] + p234 * o41[0];
  a231[1] := p231 * o11[1] + p232 * o21[1] + p233 * o31[1] + p234 * o41[1];
  a232[0] := p2232 + p231 * o12[0] + p232 * o22[0] + p233 * o32[0] + p234 * o42[0];
  a232[1] := p231 * o12[1] + p232 * o22[1] + p233 * o32[1] + p234 * o42[1];
  a233[0] := p2233 + p231 * o13[0] + p232 * o23[0] + p233 * o33[0] + p234 * o43[0];
  a233[1] := p231 * o13[1] + p232 * o23[1] + p233 * o33[1] + p234 * o43[1];
  a241[0] := p2241 + p241 * o11[0] + p242 * o21[0] + p243 * o31[0] + p244 * o41[0];
  a241[1] := p241 * o11[1] + p242 * o21[1] + p243 * o31[1] + p244 * o41[1];
  a242[0] := p2242 + p241 * o12[0] + p242 * o22[0] + p243 * o32[0] + p244 * o42[0];
  a242[1] := p241 * o12[1] + p242 * o22[1] + p243 * o32[1] + p244 * o42[1];
  a243[0] := p2243 + p241 * o13[0] + p242 * o23[0] + p243 * o33[0] + p244 * o43[0];
  a243[1] := p241 * o13[1] + p242 * o23[1] + p243 * o33[1] + p244 * o43[1];
  
  (b211, b221, b231) = SEC_MAT_VEC_FO(a211, a221, a231, a241, a212, a222, a232, a242, 
  a213, a223, a233, a243, q11, q21, q31, q41);
  (b212, b222, b232) = SEC_MAT_VEC_FO(a211, a221, a231, a241, a212, a222, a232, a242, 
  a213, a223, a233, a243, q12, q22, q32, q42);
  (b213, b223, b233) = SEC_MAT_VEC_FO(a211, a221, a231, a241, a212, a222, a232, a242, 
  a213, a223, a233, a243, q13, q23, q33, q43);
  
  c211 := b211;
  c212 := b212;
  c213 := b213;
  c222 := b222;
  c223 := b223;
  c233 := b233;
  
  a311[0] := p2311 + p311 * o11[0] + p312 * o21[0] + p313 * o31[0] + p314 * o41[0];
  a311[1] := p311 * o11[1] + p312 * o21[1] + p313 * o31[1] + p314 * o41[1];
  a312[0] := p2312 + p311 * o12[0] + p312 * o22[0] + p313 * o32[0] + p314 * o42[0];
  a312[1] := p311 * o12[1] + p312 * o22[1] + p313 * o32[1] + p314 * o42[1];
  a313[0] := p2313 + p311 * o13[0] + p312 * o23[0] + p313 * o33[0] + p314 * o43[0];
  a313[1] := p311 * o13[1] + p312 * o23[1] + p313 * o33[1] + p314 * o43[1];
  a321[0] := p2321 + p321 * o11[0] + p322 * o21[0] + p323 * o31[0] + p324 * o41[0];
  a321[1] := p321 * o11[1] + p322 * o21[1] + p323 * o31[1] + p324 * o41[1];
  a322[0] := p2322 + p321 * o12[0] + p322 * o22[0] + p323 * o32[0] + p324 * o42[0];
  a322[1] := p321 * o12[1] + p322 * o22[1] + p323 * o32[1] + p324 * o42[1];
  a323[0] := p2323 + p321 * o13[0] + p322 * o23[0] + p323 * o33[0] + p324 * o43[0];
  a323[1] := p321 * o13[1] + p322 * o23[1] + p323 * o33[1] + p324 * o43[1];
  a331[0] := p2331 + p331 * o11[0] + p332 * o21[0] + p333 * o31[0] + p334 * o41[0];
  a331[1] := p331 * o11[1] + p332 * o21[1] + p333 * o31[1] + p334 * o41[1];
  a332[0] := p2332 + p331 * o12[0] + p332 * o22[0] + p333 * o32[0] + p334 * o42[0];
  a332[1] := p331 * o12[1] + p332 * o22[1] + p333 * o32[1] + p334 * o42[1];
  a333[0] := p2333 + p331 * o13[0] + p332 * o23[0] + p333 * o33[0] + p334 * o43[0];
  a333[1] := p331 * o13[1] + p332 * o23[1] + p333 * o33[1] + p334 * o43[1];
  a341[0] := p2341 + p341 * o11[0] + p342 * o21[0] + p343 * o31[0] + p344 * o41[0];
  a341[1] := p341 * o11[1] + p342 * o21[1] + p343 * o31[1] + p344 * o41[1];
  a342[0] := p2342 + p341 * o12[0] + p342 * o22[0] + p343 * o32[0] + p344 * o42[0];
  a342[1] := p341 * o12[1] + p342 * o22[1] + p343 * o32[1] + p344 * o42[1];
  a343[0] := p2343 + p341 * o13[0] + p342 * o23[0] + p343 * o33[0] + p344 * o43[0];
  a343[1] := p341 * o13[1] + p342 * o23[1] + p343 * o33[1] + p344 * o43[1];
  
  (b311, b321, b331) = SEC_MAT_VEC_FO(a311, a321, a331, a341, a312, a322, a332, a342, 
  a313, a323, a333, a343, q11, q21, q31, q41);
  (b312, b322, b332) = SEC_MAT_VEC_FO(a311, a321, a331, a341, a312, a322, a332, a342, 
  a313, a323, a333, a343, q12, q22, q32, q42);
  (b313, b323, b333) = SEC_MAT_VEC_FO(a311, a321, a331, a341, a312, a322, a332, a342, 
  a313, a323, a333, a343, q13, q23, q33, q43);
  
  c311 := b311;
  c312 := b312;
  c313 := b313;
  c322 := b322;
  c323 := b323;
  c333 := b333;
  
end

para noglitch SNI M_COMPACT_KEYGEN_FO

(* mExpandSK *)

proc M_EXPAND_SK_FO:
  public inputs: p111, p112, p113, 
  p114, p121, p122, p123, p124, p131, 
  p132, p133, p134, p141, p142, p143,
  p144, p211, p212, p213, p214, p221, 
  p222, p223, p224, p231, p232, p233, 
  p234, p241, p242, p243, p244, p311, 
  p312, p313, p314, p321, p322, p323, 
  p324, p331, p332, p333, p334, p341, 
  p342, p343, p344, p2111, p2112,
  p2113, p2121, p2122, p2123, p2131,
  p2132, p2133, p2141, p2142, p2143,
  p2211, p2212, p2213, p2221, p2222, 
  p2223, p2231, p2232, p2233, p2241, 
  p2242, p2243, p2311, p2312, p2313, 
  p2321, p2322, p2323, p2331, p2332, 
  p2333, p2341, p2342, p2343
  inputs: o11[0:1], o12[0:1], o13[0:1], 
  o21[0:1], o22[0:1], o23[0:1],
  o31[0:1], o32[0:1], o33[0:1],
  o41[0:1], o42[0:1], o43[0:1]
  outputs: s111[0:1], s112[0:1], s113[0:1], 
  s121[0:1], s122[0:1], s123[0:1],
  s131[0:1], s132[0:1], s133[0:1],
  s141[0:1], s142[0:1], s143[0:1],
  s211[0:1], s212[0:1], s213[0:1], 
  s221[0:1], s222[0:1], s223[0:1],
  s231[0:1], s232[0:1], s233[0:1],
  s241[0:1], s242[0:1], s243[0:1],
  s311[0:1], s312[0:1], s313[0:1], 
  s321[0:1], s322[0:1], s323[0:1],
  s331[0:1], s332[0:1], s333[0:1],
  s341[0:1], s342[0:1], s343[0:1];
  
  s111[0] := p2111 + (p111 + p111) * o11[0] + (p112 + p121) * o21[0] 
  + (p113 + p131) * o31[0] + (p114 + p141) * o41[0];
  s111[1] := (p111 + p111) * o11[1] + (p112 + p121) * o21[1] 
  + (p113 + p131) * o31[1] + (p114 + p141) * o41[1];
  s112[0] := p2112 + (p111 + p111) * o12[0] + (p112 + p121) * o22[0] 
  + (p113 + p131) * o32[0] + (p114 + p141) * o42[0];
  s112[1] := (p111 + p111) * o12[1] + (p112 + p121) * o22[1] 
  + (p113 + p131) * o32[1] + (p114 + p141) * o42[1];
  s113[0] := p2113 + (p111 + p111) * o13[0] + (p112 + p121) * o23[0] 
  + (p113 + p131) * o33[0] + (p114 + p141) * o43[0];
  s113[1] := (p111 + p111) * o13[1] + (p112 + p121) * o23[1] 
  + (p113 + p131) * o33[1] + (p114 + p141) * o43[1];
  s121[0] := p2121 + (p121 + p112) * o11[0] + (p122 + p122) * o21[0]
  + (p123 + p132) * o31[0] + (p124 + p142) * o41[0];
  s121[1] := (p121 + p112) * o11[1] + (p122 + p122) * o21[1]
  + (p123 + p132) * o31[1] + (p124 + p142) * o41[1];
  s122[0] := p2122 + (p121 + p112) * o12[0] + (p122 + p122) * o22[0]
  + (p123 + p132) * o32[0] + (p124 + p142) * o42[0];
  s122[1] := (p121 + p112) * o12[1] + (p122 + p122) * o22[1]
  + (p123 + p132) * o32[1] + (p124 + p142) * o42[1];
  s123[0] := p2123 + (p121 + p112) * o13[0] + (p122 + p122) * o23[0]
  + (p123 + p132) * o33[0] + (p124 + p142) * o43[0];
  s123[1] := (p121 + p112) * o13[1] + (p122 + p122) * o23[1]
  + (p123 + p132) * o33[1] + (p124 + p142) * o43[1];
  s131[0] := p2131 + (p131 + p113) * o11[0] + (p132 + p123) * o21[0]
  + (p133 + p133) * o31[0] + (p134 + p143) * o41[0];
  s131[1] := (p131 + p113) * o11[1] + (p132 + p123) * o21[1]
  + (p133 + p133) * o31[1] + (p134 + p143) * o41[1];
  s132[0] := p2132 + (p131 + p113) * o12[0] + (p132 + p123) * o22[0]
  + (p133 + p133) * o32[0] + (p134 + p143) * o42[0];
  s132[1] := (p131 + p113) * o12[1] + (p132 + p123) * o22[1]
  + (p133 + p133) * o32[1] + (p134 + p143) * o42[1];
  s133[0] := p2133 + (p131 + p113) * o13[0] + (p132 + p123) * o23[0]
  + (p133 + p133) * o33[0] + (p134 + p143) * o43[0];
  s133[1] := (p131 + p113) * o13[1] + (p132 + p123) * o23[1]
  + (p133 + p133) * o33[1] + (p134 + p143) * o43[1];
  s141[0] := p2141 + (p141 + p114) * o11[0] + (p142 + p124) * o21[0]
  + (p143 + p134) * o31[0] + (p144 + p144) * o41[0];
  s141[1] := (p141 + p114) * o11[1] + (p142 + p124) * o21[1]
  + (p143 + p134) * o31[1] + (p144 + p144) * o41[1];
  s142[0] := p2142 + (p141 + p114) * o12[0] + (p142 + p124) * o22[0]
  + (p143 + p134) * o32[0] + (p144 + p144) * o42[0];
  s142[1] := (p141 + p114) * o12[1] + (p142 + p124) * o22[1]
  + (p143 + p134) * o32[1] + (p144 + p144) * o42[1];
  s143[0] := p2143 + (p141 + p114) * o13[0] + (p142 + p124) * o23[0]
  + (p143 + p134) * o33[0] + (p144 + p144) * o43[0];
  s143[1] := (p141 + p114) * o13[1] + (p142 + p124) * o23[1]
  + (p143 + p134) * o33[1] + (p144 + p144) * o43[1];
  
  s211[0] := p2211 + (p211 + p211) * o11[0] + (p212 + p221) * o21[0] 
  + (p213 + p231) * o31[0] + (p214 + p241) * o41[0];
  s211[1] := (p211 + p211) * o11[1] + (p212 + p221) * o21[1] 
  + (p213 + p231) * o31[1] + (p214 + p241) * o41[1];
  s212[0] := p2212 + (p211 + p211) * o12[0] + (p212 + p221) * o22[0] 
  + (p213 + p231) * o32[0] + (p214 + p241) * o42[0];
  s212[1] := (p211 + p211) * o12[1] + (p212 + p221) * o22[1] 
  + (p213 + p231) * o32[1] + (p214 + p241) * o42[1];
  s213[0] := p2213 + (p211 + p211) * o13[0] + (p212 + p221) * o23[0] 
  + (p213 + p231) * o33[0] + (p214 + p241) * o43[0];
  s213[1] := (p211 + p211) * o13[1] + (p212 + p221) * o23[1] 
  + (p213 + p231) * o33[1] + (p214 + p241) * o43[1];
  s221[0] := p2221 + (p221 + p212) * o11[0] + (p222 + p222) * o21[0]
  + (p223 + p232) * o31[0] + (p224 + p242) * o41[0];
  s221[1] := (p221 + p212) * o11[1] + (p222 + p222) * o21[1]
  + (p223 + p232) * o31[1] + (p224 + p242) * o41[1];
  s222[0] := p2222 + (p221 + p212) * o12[0] + (p222 + p222) * o22[0]
  + (p223 + p232) * o32[0] + (p224 + p242) * o42[0];
  s222[1] := (p221 + p212) * o12[1] + (p222 + p222) * o22[1]
  + (p223 + p232) * o32[1] + (p224 + p242) * o42[1];
  s223[0] := p2223 + (p221 + p212) * o13[0] + (p222 + p222) * o23[0]
  + (p223 + p232) * o33[0] + (p224 + p242) * o43[0];
  s223[1] := (p221 + p212) * o13[1] + (p222 + p222) * o23[1]
  + (p223 + p232) * o33[1] + (p224 + p242) * o43[1];
  s231[0] := p2231 + (p231 + p213) * o11[0] + (p232 + p223) * o21[0]
  + (p233 + p233) * o31[0] + (p234 + p243) * o41[0];
  s231[1] := (p231 + p213) * o11[1] + (p232 + p223) * o21[1]
  + (p233 + p233) * o31[1] + (p234 + p243) * o41[1];
  s232[0] := p2232 + (p231 + p213) * o12[0] + (p232 + p223) * o22[0]
  + (p233 + p233) * o32[0] + (p234 + p243) * o42[0];
  s232[1] := (p231 + p213) * o12[1] + (p232 + p223) * o22[1]
  + (p233 + p233) * o32[1] + (p234 + p243) * o42[1];
  s233[0] := p2233 + (p231 + p213) * o13[0] + (p232 + p223) * o23[0]
  + (p233 + p233) * o33[0] + (p234 + p243) * o43[0];
  s233[1] := (p231 + p213) * o13[1] + (p232 + p223) * o23[1]
  + (p233 + p233) * o33[1] + (p234 + p243) * o43[1];
  s241[0] := p2241 + (p241 + p214) * o11[0] + (p242 + p224) * o21[0]
  + (p243 + p234) * o31[0] + (p244 + p244) * o41[0];
  s241[1] := (p241 + p214) * o11[1] + (p242 + p224) * o21[1]
  + (p243 + p234) * o31[1] + (p244 + p244) * o41[1];
  s242[0] := p2242 + (p241 + p214) * o12[0] + (p242 + p224) * o22[0]
  + (p243 + p234) * o32[0] + (p244 + p244) * o42[0];
  s242[1] := (p241 + p214) * o12[1] + (p242 + p224) * o22[1]
  + (p243 + p234) * o32[1] + (p244 + p244) * o42[1];
  s243[0] := p2243 + (p241 + p214) * o13[0] + (p242 + p224) * o23[0]
  + (p243 + p234) * o33[0] + (p244 + p244) * o43[0];
  s243[1] := (p241 + p214) * o13[1] + (p242 + p224) * o23[1]
  + (p243 + p234) * o33[1] + (p244 + p244) * o43[1];
  
  s311[0] := p2311 + (p311 + p311) * o11[0] + (p312 + p321) * o21[0] 
  + (p313 + p331) * o31[0] + (p314 + p341) * o41[0];
  s311[1] := (p311 + p311) * o11[1] + (p312 + p321) * o21[1] 
  + (p313 + p331) * o31[1] + (p314 + p341) * o41[1];
  s312[0] := p2312 + (p311 + p311) * o12[0] + (p312 + p321) * o22[0] 
  + (p313 + p331) * o32[0] + (p314 + p341) * o42[0];
  s312[1] := (p311 + p311) * o12[1] + (p312 + p321) * o22[1] 
  + (p313 + p331) * o32[1] + (p314 + p341) * o42[1];
  s313[0] := p2313 + (p311 + p311) * o13[0] + (p312 + p321) * o23[0] 
  + (p313 + p331) * o33[0] + (p314 + p341) * o43[0];
  s313[1] := (p311 + p311) * o13[1] + (p312 + p321) * o23[1] 
  + (p313 + p331) * o33[1] + (p314 + p341) * o43[1];
  s321[0] := p2321 + (p321 + p312) * o11[0] + (p322 + p322) * o21[0]
  + (p323 + p332) * o31[0] + (p324 + p342) * o41[0];
  s321[1] := (p321 + p312) * o11[1] + (p322 + p322) * o21[1]
  + (p323 + p332) * o31[1] + (p324 + p342) * o41[1];
  s322[0] := p2322 + (p321 + p312) * o12[0] + (p322 + p322) * o22[0]
  + (p323 + p332) * o32[0] + (p324 + p342) * o42[0];
  s322[1] := (p321 + p312) * o12[1] + (p322 + p322) * o22[1]
  + (p323 + p332) * o32[1] + (p324 + p342) * o42[1];
  s323[0] := p2323 + (p321 + p312) * o13[0] + (p322 + p322) * o23[0]
  + (p323 + p332) * o33[0] + (p324 + p342) * o43[0];
  s323[1] := (p321 + p312) * o13[1] + (p322 + p322) * o23[1]
  + (p323 + p332) * o33[1] + (p324 + p342) * o43[1];
  s331[0] := p2331 + (p331 + p313) * o11[0] + (p332 + p323) * o21[0]
  + (p333 + p333) * o31[0] + (p334 + p343) * o41[0];
  s331[1] := (p331 + p313) * o11[1] + (p332 + p323) * o21[1]
  + (p333 + p333) * o31[1] + (p334 + p343) * o41[1];
  s332[0] := p2332 + (p331 + p313) * o12[0] + (p332 + p323) * o22[0]
  + (p333 + p333) * o32[0] + (p334 + p343) * o42[0];
  s332[1] := (p331 + p313) * o12[1] + (p332 + p323) * o22[1]
  + (p333 + p333) * o32[1] + (p334 + p343) * o42[1];
  s333[0] := p2333 + (p331 + p313) * o13[0] + (p332 + p323) * o23[0]
  + (p333 + p333) * o33[0] + (p334 + p343) * o43[0];
  s333[1] := (p331 + p313) * o13[1] + (p332 + p323) * o23[1]
  + (p333 + p333) * o33[1] + (p334 + p343) * o43[1];
  s341[0] := p2341 + (p341 + p314) * o11[0] + (p342 + p324) * o21[0]
  + (p343 + p334) * o31[0] + (p344 + p344) * o41[0];
  s341[1] := (p341 + p314) * o11[1] + (p342 + p324) * o21[1]
  + (p343 + p334) * o31[1] + (p344 + p344) * o41[1];
  s342[0] := p2342 + (p341 + p314) * o12[0] + (p342 + p324) * o22[0]
  + (p343 + p334) * o32[0] + (p344 + p344) * o42[0];
  s342[1] := (p341 + p314) * o12[1] + (p342 + p324) * o22[1]
  + (p343 + p334) * o32[1] + (p344 + p344) * o42[1];
  s343[0] := p2343 + (p341 + p314) * o13[0] + (p342 + p324) * o23[0]
  + (p343 + p334) * o33[0] + (p344 + p344) * o43[0];
  s343[1] := (p341 + p314) * o13[1] + (p342 + p324) * o23[1]
  + (p343 + p334) * o33[1] + (p344 + p344) * o43[1];
  
end

para noglitch NI M_EXPAND_SK_FO

(* mSign *)

proc M_SIGN_FO:
  public inputs: p111, p112, p113, 
  p114, p121, p122, p123, p124, p131, 
  p132, p133, p134, p141, p142, p143,
  p144, p211, p212, p213, p214, p221, 
  p222, p223, p224, p231, p232, p233, 
  p234, p241, p242, p243, p244, p311, 
  p312, p313, p314, p321, p322, p323, 
  p324, p331, p332, p333, p334, p341, 
  p342, p343, p344, t1, t2, t3
  inputs: o11[0:1], o12[0:1], o13[0:1], 
  o21[0:1], o22[0:1], o23[0:1],
  o31[0:1], o32[0:1], o33[0:1],
  o41[0:1], o42[0:1], o43[0:1],
  s111[0:1], s112[0:1], s113[0:1], 
  s121[0:1], s122[0:1], s123[0:1],
  s131[0:1], s132[0:1], s133[0:1],
  s141[0:1], s142[0:1], s143[0:1],
  s211[0:1], s212[0:1], s213[0:1], 
  s221[0:1], s222[0:1], s223[0:1],
  s231[0:1], s232[0:1], s233[0:1],
  s241[0:1], s242[0:1], s243[0:1],
  s311[0:1], s312[0:1], s313[0:1], 
  s321[0:1], s322[0:1], s323[0:1],
  s331[0:1], s332[0:1], s333[0:1],
  s341[0:1], s342[0:1], s343[0:1],
  v1[0:1], v2[0:1], v3[0:1], v4[0:1]
  outputs: y1[0:1], y2[0:1], y3[0:1],
  l11[0:1], l12[0:1], l13[0:1],
  l21[0:1], l22[0:1], l23[0:1],
  l31[0:1], l32[0:1], l33[0:1];
  
  (l11, l21, l31) = SEC_MAT_VEC_FO(s111, s121, s131, s141, 
  s112, s122, s132, s142, s113, s123, s133, s143, v1, v2,
  v3, v4);
  (l12, l22, l32) = SEC_MAT_VEC_FO(s211, s221, s231, s241, 
  s212, s222, s232, s242, s213, s223, s233, s243, v1, v2,
  v3, v4);
  (l13, l23, l33) = SEC_MAT_VEC_FO(s311, s321, s331, s341, 
  s312, s322, s332, s342, s313, s323, s333, s343, v1, v2,
  v3, v4);
  
  (y1, y2, y3) = SEC_QUAD_FO(p111, p112, p113, p114, p121, 
  p122, p123, p124, p131, p132, p133, p134, p141, p142, p143,
  p144, p211, p212, p213, p214, p221, p222, p223, p224, p231, 
  p232, p233, p234, p241, p242, p243, p244, p311, p312, p313, 
  p314, p321, p322, p323, p324, p331, p332, p333, p334, p341, 
  p342, p343, p344, v1, v2, v3, v4);
  
  y1[0] := y1[0] + t1;
  y2[0] := y2[0] + t2;
  y3[0] := y3[0] + t3;
  
end

para noglitch SNI M_SIGN_FO

(* ### END FO Gadgets ### *)

(* ### SECOND-ORDER Gadgets ### *)

(* SecREF *)

proc SEC_REF_SO:
  inputs: a[0:2]
  outputs: b[0:2]
  randoms: r, r2, r3;
  
  b := a;
  b[0] := b[0] + r;
  b[1] := b[1] + r;
  b[0] := b[0] + r2;
  b[2] := b[2] + r2;
  b[1] := b[1] + r3;
  b[2] := b[2] + r3;
end

noglitch order 2 SNI SEC_REF_SO


(* SecDotProd *)

proc SEC_DOT_PROD_SO:
  inputs: x1[0:2], x2[0:2], x3[0:2],
  x4[0:2], y1[0:2], y2[0:2], y3[0:2],
  y4[0:2]
  outputs: z[0:2]
  shares: u[0:5], w[0:2] (*0 = u_12, 1 = u_13, 2 = u_21, 3 = u_23, 4 = u_31, 5 = u_32 *)
  randoms: r1, r2, r3;
  
  (* Cross-products *)
  u[0] := x1[0] * y1[1];
  u[2] := x1[1] * y1[0];
  u[1] := x1[0] * y1[2];
  u[4] := x1[2] * y1[0];
  u[3] := x1[1] * y1[2];
  u[5] := x1[2] * y1[1];
  
  w[0] := x1[0] * y1[0];
  w[1] := x1[1] * y1[1];
  w[2] := x1[2] * y1[2];
  
  
  u[0] := u[0] + (x2[0] * y2[1]);
  u[2] := u[2] + (x2[1] * y2[0]);
  u[1] := u[1] + (x2[0] * y2[2]);
  u[4] := u[4] + (x2[2] * y2[0]);
  u[3] := u[3] + (x2[1] * y2[2]);
  u[5] := u[5] + (x2[2] * y2[1]);
  
  w[0] := w[0] + (x2[0] * y2[0]);
  w[1] := w[1] + (x2[1] * y2[1]);
  w[2] := w[2] + (x2[2] * y2[2]);
  
  
  u[0] := u[0] + (x3[0] * y3[1]);
  u[2] := u[2] + (x3[1] * y3[0]);
  u[1] := u[1] + (x3[0] * y3[2]);
  u[4] := u[4] + (x3[2] * y3[0]);
  u[3] := u[3] + (x3[1] * y3[2]);
  u[5] := u[5] + (x3[2] * y3[1]);
  
  w[0] := w[0] + (x3[0] * y3[0]);
  w[1] := w[1] + (x3[1] * y3[1]);
  w[2] := w[2] + (x3[2] * y3[2]);
  
  
  u[0] := u[0] + (x4[0] * y4[1]);
  u[2] := u[2] + (x4[1] * y4[0]);
  u[1] := u[1] + (x4[0] * y4[2]);
  u[4] := u[4] + (x4[2] * y4[0]);
  u[3] := u[3] + (x4[1] * y4[2]);
  u[5] := u[5] + (x4[2] * y4[1]);
  
  w[0] := w[0] + (x4[0] * y4[0]);
  w[1] := w[1] + (x4[1] * y4[1]);
  w[2] := w[2] + (x4[2] * y4[2]);
  
  (* Resharing *)
  u[0] := u[0] + r1;
  u[2] := u[2] + r1; 
  u[1] := u[1] + r2;
  u[4] := u[4] + r2;
  u[3] := u[3] + r3;
  u[5] := u[5] + r3;
  
  (* Compression *)
  z[0] := w[0] + u[0] + u[1];
  z[1] := w[1] + u[2] + u[3];
  z[2] := w[2] + u[4] + u[5];
  
end

noglitch order 2 SNI SEC_DOT_PROD_SO


(* SecMatVec *)

proc SEC_MAT_VEC_SO:
  inputs: a11[0:2], a12[0:2],
  a13[0:2], a14[0:2], a21[0:2], 
  a22[0:2], a23[0:2], a24[0:2],
  a31[0:2], a32[0:2], a33[0:2], 
  a34[0:2], x1[0:2], x2[0:2],
  x3[0:2], x4[0:2]
  outputs: b1[0:2], b2[0:2],
  b3[0:2];
  
  b1 = SEC_DOT_PROD_SO(a11, a12, a13, 
  a14, x1, x2, x3, x4);
  b2 = SEC_DOT_PROD_SO(a21, a22, a23, 
  a24, x1, x2, x3, x4);
  b3 = SEC_DOT_PROD_SO(a31, a32, a33, 
  a34, x1, x2, x3, x4);
  
end

noglitch order 2 SNI SEC_MAT_VEC_SO


proc SEC_QUAD_SO:
  public inputs: p111, p112, p113, 
  p114, p121, p122, p123, p124, p131, 
  p132, p133, p134, p141, p142, p143,
  p144, p211, p212, p213, p214, p221, 
  p222, p223, p224, p231, p232, p233, 
  p234, p241, p242, p243, p244, p311, 
  p312, p313, p314, p321, p322, p323, 
  p324, p331, p332, p333, p334, p341, 
  p342, p343, p344
  inputs: x1[0:2], x2[0:2],
  x3[0:2], x4[0:2]
  outputs: y1[0:2], y2[0:2],
  y3[0:2]
  shares: t11[0:2], t12[0:2],
  t13[0:2], t21[0:2], t22[0:2],
  t23[0:2], t31[0:2], t32[0:2],
  t33[0:2], t41[0:2], t42[0:2],
  t43[0:2], s1[0:2], s2[0:2],
  s3[0:2], s4[0:2];
  
  s1 = SEC_REF_SO(x1);
  s2 = SEC_REF_SO(x2);
  s3 = SEC_REF_SO(x3);
  s4 = SEC_REF_SO(x4);
  
  t11[0] := p111 * x1[0] + p112 * x2[0] + p113 * x3[0] + p114 * x4[0];
  t11[1] := p111 * x1[1] + p112 * x2[1] + p113 * x3[1] + p114 * x4[1];
  t11[2] := p111 * x1[2] + p112 * x2[2] + p113 * x3[2] + p114 * x4[2];
  t21[0] := p121 * x1[0] + p122 * x2[0] + p123 * x3[0] + p124 * x4[0];
  t21[1] := p121 * x1[1] + p122 * x2[1] + p123 * x3[1] + p124 * x4[1];
  t21[2] := p121 * x1[2] + p122 * x2[2] + p123 * x3[2] + p124 * x4[2];
  t31[0] := p131 * x1[0] + p132 * x2[0] + p133 * x3[0] + p134 * x4[0];
  t31[1] := p131 * x1[1] + p132 * x2[1] + p133 * x3[1] + p134 * x4[1];
  t31[2] := p131 * x1[2] + p132 * x2[2] + p133 * x3[2] + p134 * x4[2];
  t41[0] := p141 * x1[0] + p142 * x2[0] + p143 * x3[0] + p144 * x4[0];
  t41[1] := p141 * x1[1] + p142 * x2[1] + p143 * x3[1] + p144 * x4[1];
  t41[2] := p141 * x1[2] + p142 * x2[2] + p143 * x3[2] + p144 * x4[2];
  
  t12[0] := p211 * x1[0] + p212 * x2[0] + p213 * x3[0] + p214 * x4[0];
  t12[1] := p211 * x1[1] + p212 * x2[1] + p213 * x3[1] + p214 * x4[1];
  t12[2] := p211 * x1[2] + p212 * x2[2] + p213 * x3[2] + p214 * x4[2];
  t22[0] := p221 * x1[0] + p222 * x2[0] + p223 * x3[0] + p224 * x4[0];
  t22[1] := p221 * x1[1] + p222 * x2[1] + p223 * x3[1] + p224 * x4[1];
  t22[2] := p221 * x1[2] + p222 * x2[2] + p223 * x3[2] + p224 * x4[2];
  t32[0] := p231 * x1[0] + p232 * x2[0] + p233 * x3[0] + p234 * x4[0];
  t32[1] := p231 * x1[1] + p232 * x2[1] + p233 * x3[1] + p234 * x4[1];
  t32[2] := p231 * x1[2] + p232 * x2[2] + p233 * x3[2] + p234 * x4[2];
  t42[0] := p241 * x1[0] + p242 * x2[0] + p243 * x3[0] + p244 * x4[0];
  t42[1] := p241 * x1[1] + p242 * x2[1] + p243 * x3[1] + p244 * x4[1];
  t42[2] := p241 * x1[2] + p242 * x2[2] + p243 * x3[2] + p244 * x4[2];
  
  t13[0] := p311 * x1[0] + p312 * x2[0] + p313 * x3[0] + p314 * x4[0];
  t13[1] := p311 * x1[1] + p312 * x2[1] + p313 * x3[1] + p314 * x4[1];
  t13[2] := p311 * x1[2] + p312 * x2[2] + p313 * x3[2] + p314 * x4[2];
  t23[0] := p321 * x1[0] + p322 * x2[0] + p323 * x3[0] + p324 * x4[0];
  t23[1] := p321 * x1[1] + p322 * x2[1] + p323 * x3[1] + p324 * x4[1];
  t23[2] := p321 * x1[2] + p322 * x2[2] + p323 * x3[2] + p324 * x4[2];
  t33[0] := p331 * x1[0] + p332 * x2[0] + p333 * x3[0] + p334 * x4[0];
  t33[1] := p331 * x1[1] + p332 * x2[1] + p333 * x3[1] + p334 * x4[1];
  t33[2] := p331 * x1[2] + p332 * x2[2] + p333 * x3[2] + p334 * x4[2];
  t43[0] := p341 * x1[0] + p342 * x2[0] + p343 * x3[0] + p344 * x4[0];
  t43[1] := p341 * x1[1] + p342 * x2[1] + p343 * x3[1] + p344 * x4[1];
  t43[2] := p341 * x1[2] + p342 * x2[2] + p343 * x3[2] + p344 * x4[2];
  
  (y1, y2, y3) = SEC_MAT_VEC_SO(t11, t21, t31, 
  t41, t12, t22, t32, t42, t13, t23, t33,
  t43, s1, s2, s3, s4);
  
end

noglitch order 2 SNI SEC_QUAD_SO

(* mCompactKeyGen *)

proc M_COMPACT_KEYGEN_SO:
  public inputs: p111, p112, p113, 
  p114, p121, p122, p123, p124, p131, 
  p132, p133, p134, p141, p142, p143,
  p144, p211, p212, p213, p214, p221, 
  p222, p223, p224, p231, p232, p233, 
  p234, p241, p242, p243, p244, p311, 
  p312, p313, p314, p321, p322, p323, 
  p324, p331, p332, p333, p334, p341, 
  p342, p343, p344, p2111, p2112,
  p2113, p2121, p2122, p2123, p2131,
  p2132, p2133, p2141, p2142, p2143,
  p2211, p2212, p2213, p2221, p2222, 
  p2223, p2231, p2232, p2233, p2241, 
  p2242, p2243, p2311, p2312, p2313, 
  p2321, p2322, p2323, p2331, p2332, 
  p2333, p2341, p2342, p2343
  inputs: o11[0:2], o12[0:2], o13[0:2], 
  o21[0:2], o22[0:2], o23[0:2],
  o31[0:2], o32[0:2], o33[0:2],
  o41[0:2], o42[0:2], o43[0:2]
  outputs: c111[0:2], c112[0:2], c113[0:2],
  c122[0:2], c123[0:2], c133[0:2],
  c211[0:2], c212[0:2], c213[0:2],
  c222[0:2], c223[0:2], c233[0:2],
  c311[0:2], c312[0:2], c313[0:2],
  c322[0:2], c323[0:2], c333[0:2]
  shares: q11[0:2], q12[0:2], q13[0:2], 
  q21[0:2], q22[0:2], q23[0:2],
  q31[0:2], q32[0:2], q33[0:2],
  q41[0:2], q42[0:2], q43[0:2],
  a111[0:2], a112[0:2], a113[0:2], 
  a121[0:2], a122[0:2], a123[0:2],
  a131[0:2], a132[0:2], a133[0:2],
  a141[0:2], a142[0:2], a143[0:2],
  a211[0:2], a212[0:2], a213[0:2], 
  a221[0:2], a222[0:2], a223[0:2],
  a231[0:2], a232[0:2], a233[0:2],
  a241[0:2], a242[0:2], a243[0:2],
  a311[0:2], a312[0:2], a313[0:2], 
  a321[0:2], a322[0:2], a323[0:2],
  a331[0:2], a332[0:2], a333[0:2],
  a341[0:2], a342[0:2], a343[0:2],
  b111[0:2], b112[0:2], b113[0:2],
  b121[0:2], b122[0:2], b123[0:2], 
  b131[0:2], b132[0:2], b133[0:2],
  b211[0:2], b212[0:2], b213[0:2],
  b221[0:2], b222[0:2], b223[0:2], 
  b231[0:2], b232[0:2], b233[0:2],
  b311[0:2], b312[0:2], b313[0:2],
  b321[0:2], b322[0:2], b323[0:2], 
  b331[0:2], b332[0:2], b333[0:2];
  
  q11 = SEC_REF_SO(o11);
  q12 = SEC_REF_SO(o12);
  q13 = SEC_REF_SO(o13);
  q21 = SEC_REF_SO(o21);
  q22 = SEC_REF_SO(o22);
  q23 = SEC_REF_SO(o23);
  q31 = SEC_REF_SO(o31);
  q32 = SEC_REF_SO(o32);
  q33 = SEC_REF_SO(o33);
  q41 = SEC_REF_SO(o41);
  q42 = SEC_REF_SO(o42);
  q43 = SEC_REF_SO(o43);
  
  a111[0] := p2111 + p111 * o11[0] + p112 * o21[0] + p113 * o31[0] + p114 * o41[0];
  a111[1] := p111 * o11[1] + p112 * o21[1] + p113 * o31[1] + p114 * o41[1];
  a111[2] := p111 * o11[2] + p112 * o21[2] + p113 * o31[2] + p114 * o41[2];
  a112[0] := p2112 + p111 * o12[0] + p112 * o22[0] + p113 * o32[0] + p114 * o42[0];
  a112[1] := p111 * o12[1] + p112 * o22[1] + p113 * o32[1] + p114 * o42[1];
  a112[2] := p111 * o12[2] + p112 * o22[2] + p113 * o32[2] + p114 * o42[2];
  a113[0] := p2113 + p111 * o13[0] + p112 * o23[0] + p113 * o33[0] + p114 * o43[0];
  a113[1] := p111 * o13[1] + p112 * o23[1] + p113 * o33[1] + p114 * o43[1];
  a113[2] := p111 * o13[2] + p112 * o23[2] + p113 * o33[2] + p114 * o43[2];
  a121[0] := p2121 + p121 * o11[0] + p122 * o21[0] + p123 * o31[0] + p124 * o41[0];
  a121[1] := p121 * o11[1] + p122 * o21[1] + p123 * o31[1] + p124 * o41[1];
  a121[2] := p121 * o11[2] + p122 * o21[2] + p123 * o31[2] + p124 * o41[2];
  a122[0] := p2122 + p121 * o12[0] + p122 * o22[0] + p123 * o32[0] + p124 * o42[0];
  a122[1] := p121 * o12[1] + p122 * o22[1] + p123 * o32[1] + p124 * o42[1];
  a122[2] := p121 * o12[2] + p122 * o22[2] + p123 * o32[2] + p124 * o42[2];
  a123[0] := p2123 + p121 * o13[0] + p122 * o23[0] + p123 * o33[0] + p124 * o43[0];
  a123[1] := p121 * o13[1] + p122 * o23[1] + p123 * o33[1] + p124 * o43[1];
  a123[2] := p121 * o13[2] + p122 * o23[2] + p123 * o33[2] + p124 * o43[2];
  a131[0] := p2131 + p131 * o11[0] + p132 * o21[0] + p133 * o31[0] + p134 * o41[0];
  a131[1] := p131 * o11[1] + p132 * o21[1] + p133 * o31[1] + p134 * o41[1];
  a131[2] := p131 * o11[2] + p132 * o21[2] + p133 * o31[2] + p134 * o41[2];
  a132[0] := p2132 + p131 * o12[0] + p132 * o22[0] + p133 * o32[0] + p134 * o42[0];
  a132[1] := p131 * o12[1] + p132 * o22[1] + p133 * o32[1] + p134 * o42[1];
  a132[2] := p131 * o12[2] + p132 * o22[2] + p133 * o32[2] + p134 * o42[2];
  a133[0] := p2133 + p131 * o13[0] + p132 * o23[0] + p133 * o33[0] + p134 * o43[0];
  a133[1] := p131 * o13[1] + p132 * o23[1] + p133 * o33[1] + p134 * o43[1];
  a133[2] := p131 * o13[2] + p132 * o23[2] + p133 * o33[2] + p134 * o43[2];
  a141[0] := p2141 + p141 * o11[0] + p142 * o21[0] + p143 * o31[0] + p144 * o41[0];
  a141[1] := p141 * o11[1] + p142 * o21[1] + p143 * o31[1] + p144 * o41[1];
  a141[2] := p141 * o11[2] + p142 * o21[2] + p143 * o31[2] + p144 * o41[2];
  a142[0] := p2142 + p141 * o12[0] + p142 * o22[0] + p143 * o32[0] + p144 * o42[0];
  a142[1] := p141 * o12[1] + p142 * o22[1] + p143 * o32[1] + p144 * o42[1];
  a142[2] := p141 * o12[2] + p142 * o22[2] + p143 * o32[2] + p144 * o42[2];
  a143[0] := p2143 + p141 * o13[0] + p142 * o23[0] + p143 * o33[0] + p144 * o43[0];
  a143[1] := p141 * o13[1] + p142 * o23[1] + p143 * o33[1] + p144 * o43[1];
  a143[2] := p141 * o13[2] + p142 * o23[2] + p143 * o33[2] + p144 * o43[2];
  
  (b111, b121, b131) = SEC_MAT_VEC_SO(a111, a121, a131, a141, a112, a122, a132, a142, 
  a113, a123, a133, a143, q11, q21, q31, q41);
  (b112, b122, b132) = SEC_MAT_VEC_SO(a111, a121, a131, a141, a112, a122, a132, a142, 
  a113, a123, a133, a143, q12, q22, q32, q42);
  (b113, b123, b133) = SEC_MAT_VEC_SO(a111, a121, a131, a141, a112, a122, a132, a142, 
  a113, a123, a133, a143, q13, q23, q33, q43);
  
  c111 := b111;
  c112 := b112;
  c113 := b113;
  c122 := b122;
  c123 := b123;
  c133 := b133;
  
  a211[0] := p2211 + p211 * o11[0] + p212 * o21[0] + p213 * o31[0] + p214 * o41[0];
  a211[1] := p211 * o11[1] + p212 * o21[1] + p213 * o31[1] + p214 * o41[1];
  a211[2] := p211 * o11[2] + p212 * o21[2] + p213 * o31[2] + p214 * o41[2];
  a212[0] := p2212 + p211 * o12[0] + p212 * o22[0] + p213 * o32[0] + p214 * o42[0];
  a212[1] := p211 * o12[1] + p212 * o22[1] + p213 * o32[1] + p214 * o42[1];
  a212[2] := p211 * o12[2] + p212 * o22[2] + p213 * o32[2] + p214 * o42[2];
  a213[0] := p2213 + p211 * o13[0] + p212 * o23[0] + p213 * o33[0] + p214 * o43[0];
  a213[1] := p211 * o13[1] + p212 * o23[1] + p213 * o33[1] + p214 * o43[1];
  a213[2] := p211 * o13[2] + p212 * o23[2] + p213 * o33[2] + p214 * o43[2];
  a221[0] := p2221 + p221 * o11[0] + p222 * o21[0] + p223 * o31[0] + p224 * o41[0];
  a221[1] := p221 * o11[1] + p222 * o21[1] + p223 * o31[1] + p224 * o41[1];
  a221[2] := p221 * o11[2] + p222 * o21[2] + p223 * o31[2] + p224 * o41[2];
  a222[0] := p2222 + p221 * o12[0] + p222 * o22[0] + p223 * o32[0] + p224 * o42[0];
  a222[1] := p221 * o12[1] + p222 * o22[1] + p223 * o32[1] + p224 * o42[1];
  a222[2] := p221 * o12[2] + p222 * o22[2] + p223 * o32[2] + p224 * o42[2];
  a223[0] := p2223 + p221 * o13[0] + p222 * o23[0] + p223 * o33[0] + p224 * o43[0];
  a223[1] := p221 * o13[1] + p222 * o23[1] + p223 * o33[1] + p224 * o43[1];
  a223[2] := p221 * o13[2] + p222 * o23[2] + p223 * o33[2] + p224 * o43[2];
  a231[0] := p2231 + p231 * o11[0] + p232 * o21[0] + p233 * o31[0] + p234 * o41[0];
  a231[1] := p231 * o11[1] + p232 * o21[1] + p233 * o31[1] + p234 * o41[1];
  a231[2] := p231 * o11[2] + p232 * o21[2] + p233 * o31[2] + p234 * o41[2];
  a232[0] := p2232 + p231 * o12[0] + p232 * o22[0] + p233 * o32[0] + p234 * o42[0];
  a232[1] := p231 * o12[1] + p232 * o22[1] + p233 * o32[1] + p234 * o42[1];
  a232[2] := p231 * o12[2] + p232 * o22[2] + p233 * o32[2] + p234 * o42[2];
  a233[0] := p2233 + p231 * o13[0] + p232 * o23[0] + p233 * o33[0] + p234 * o43[0];
  a233[1] := p231 * o13[1] + p232 * o23[1] + p233 * o33[1] + p234 * o43[1];
  a233[2] := p231 * o13[2] + p232 * o23[2] + p233 * o33[2] + p234 * o43[2];
  a241[0] := p2241 + p241 * o11[0] + p242 * o21[0] + p243 * o31[0] + p244 * o41[0];
  a241[1] := p241 * o11[1] + p242 * o21[1] + p243 * o31[1] + p244 * o41[1];
  a241[2] := p241 * o11[2] + p242 * o21[2] + p243 * o31[2] + p244 * o41[2];
  a242[0] := p2242 + p241 * o12[0] + p242 * o22[0] + p243 * o32[0] + p244 * o42[0];
  a242[1] := p241 * o12[1] + p242 * o22[1] + p243 * o32[1] + p244 * o42[1];
  a242[2] := p241 * o12[2] + p242 * o22[2] + p243 * o32[2] + p244 * o42[2];
  a243[0] := p2243 + p241 * o13[0] + p242 * o23[0] + p243 * o33[0] + p244 * o43[0];
  a243[1] := p241 * o13[1] + p242 * o23[1] + p243 * o33[1] + p244 * o43[1];
  a243[2] := p241 * o13[2] + p242 * o23[2] + p243 * o33[2] + p244 * o43[2];
  
  (b211, b221, b231) = SEC_MAT_VEC_SO(a211, a221, a231, a241, a212, a222, a232, a242, 
  a213, a223, a233, a243, q11, q21, q31, q41);
  (b212, b222, b232) = SEC_MAT_VEC_SO(a211, a221, a231, a241, a212, a222, a232, a242, 
  a213, a223, a233, a243, q12, q22, q32, q42);
  (b213, b223, b233) = SEC_MAT_VEC_SO(a211, a221, a231, a241, a212, a222, a232, a242, 
  a213, a223, a233, a243, q13, q23, q33, q43);
  
  c211 := b211;
  c212 := b212;
  c213 := b213;
  c222 := b222;
  c223 := b223;
  c233 := b233;
  
  a311[0] := p2311 + p311 * o11[0] + p312 * o21[0] + p313 * o31[0] + p314 * o41[0];
  a311[1] := p311 * o11[1] + p312 * o21[1] + p313 * o31[1] + p314 * o41[1];
  a311[2] := p311 * o11[2] + p312 * o21[2] + p313 * o31[2] + p314 * o41[2];
  a312[0] := p2312 + p311 * o12[0] + p312 * o22[0] + p313 * o32[0] + p314 * o42[0];
  a312[1] := p311 * o12[1] + p312 * o22[1] + p313 * o32[1] + p314 * o42[1];
  a312[2] := p311 * o12[2] + p312 * o22[2] + p313 * o32[2] + p314 * o42[2];
  a313[0] := p2313 + p311 * o13[0] + p312 * o23[0] + p313 * o33[0] + p314 * o43[0];
  a313[1] := p311 * o13[1] + p312 * o23[1] + p313 * o33[1] + p314 * o43[1];
  a313[2] := p311 * o13[2] + p312 * o23[2] + p313 * o33[2] + p314 * o43[2];
  a321[0] := p2321 + p321 * o11[0] + p322 * o21[0] + p323 * o31[0] + p324 * o41[0];
  a321[1] := p321 * o11[1] + p322 * o21[1] + p323 * o31[1] + p324 * o41[1];
  a321[2] := p321 * o11[2] + p322 * o21[2] + p323 * o31[2] + p324 * o41[2];
  a322[0] := p2322 + p321 * o12[0] + p322 * o22[0] + p323 * o32[0] + p324 * o42[0];
  a322[1] := p321 * o12[1] + p322 * o22[1] + p323 * o32[1] + p324 * o42[1];
  a322[2] := p321 * o12[2] + p322 * o22[2] + p323 * o32[2] + p324 * o42[2];
  a323[0] := p2323 + p321 * o13[0] + p322 * o23[0] + p323 * o33[0] + p324 * o43[0];
  a323[1] := p321 * o13[1] + p322 * o23[1] + p323 * o33[1] + p324 * o43[1];
  a323[2] := p321 * o13[2] + p322 * o23[2] + p323 * o33[2] + p324 * o43[2];
  a331[0] := p2331 + p331 * o11[0] + p332 * o21[0] + p333 * o31[0] + p334 * o41[0];
  a331[1] := p331 * o11[1] + p332 * o21[1] + p333 * o31[1] + p334 * o41[1];
  a331[2] := p331 * o11[2] + p332 * o21[2] + p333 * o31[2] + p334 * o41[2];
  a332[0] := p2332 + p331 * o12[0] + p332 * o22[0] + p333 * o32[0] + p334 * o42[0];
  a332[1] := p331 * o12[1] + p332 * o22[1] + p333 * o32[1] + p334 * o42[1];
  a332[2] := p331 * o12[2] + p332 * o22[2] + p333 * o32[2] + p334 * o42[2];
  a333[0] := p2333 + p331 * o13[0] + p332 * o23[0] + p333 * o33[0] + p334 * o43[0];
  a333[1] := p331 * o13[1] + p332 * o23[1] + p333 * o33[1] + p334 * o43[1];
  a333[2] := p331 * o13[2] + p332 * o23[2] + p333 * o33[2] + p334 * o43[2];
  a341[0] := p2341 + p341 * o11[0] + p342 * o21[0] + p343 * o31[0] + p344 * o41[0];
  a341[1] := p341 * o11[1] + p342 * o21[1] + p343 * o31[1] + p344 * o41[1];
  a341[2] := p341 * o11[2] + p342 * o21[2] + p343 * o31[2] + p344 * o41[2];
  a342[0] := p2342 + p341 * o12[0] + p342 * o22[0] + p343 * o32[0] + p344 * o42[0];
  a342[1] := p341 * o12[1] + p342 * o22[1] + p343 * o32[1] + p344 * o42[1];
  a342[2] := p341 * o12[2] + p342 * o22[2] + p343 * o32[2] + p344 * o42[2];
  a343[0] := p2343 + p341 * o13[0] + p342 * o23[0] + p343 * o33[0] + p344 * o43[0];
  a343[1] := p341 * o13[1] + p342 * o23[1] + p343 * o33[1] + p344 * o43[1];
  a343[2] := p341 * o13[2] + p342 * o23[2] + p343 * o33[2] + p344 * o43[2];
  
  (b311, b321, b331) = SEC_MAT_VEC_SO(a311, a321, a331, a341, a312, a322, a332, a342, 
  a313, a323, a333, a343, q11, q21, q31, q41);
  (b312, b322, b332) = SEC_MAT_VEC_SO(a311, a321, a331, a341, a312, a322, a332, a342, 
  a313, a323, a333, a343, q12, q22, q32, q42);
  (b313, b323, b333) = SEC_MAT_VEC_SO(a311, a321, a331, a341, a312, a322, a332, a342, 
  a313, a323, a333, a343, q13, q23, q33, q43);
  
  c311 := b311;
  c312 := b312;
  c313 := b313;
  c322 := b322;
  c323 := b323;
  c333 := b333;
  
end

para noglitch order 2 SNI M_COMPACT_KEYGEN_SO 


(* mExpandSK *)

proc M_EXPAND_SK_SO:
  public inputs: p111, p112, p113, 
  p114, p121, p122, p123, p124, p131, 
  p132, p133, p134, p141, p142, p143,
  p144, p211, p212, p213, p214, p221, 
  p222, p223, p224, p231, p232, p233, 
  p234, p241, p242, p243, p244, p311, 
  p312, p313, p314, p321, p322, p323, 
  p324, p331, p332, p333, p334, p341, 
  p342, p343, p344, p2111, p2112,
  p2113, p2121, p2122, p2123, p2131,
  p2132, p2133, p2141, p2142, p2143,
  p2211, p2212, p2213, p2221, p2222, 
  p2223, p2231, p2232, p2233, p2241, 
  p2242, p2243, p2311, p2312, p2313, 
  p2321, p2322, p2323, p2331, p2332, 
  p2333, p2341, p2342, p2343
  inputs: o11[0:2], o12[0:2], o13[0:2], 
  o21[0:2], o22[0:2], o23[0:2],
  o31[0:2], o32[0:2], o33[0:2],
  o41[0:2], o42[0:2], o43[0:2]
  outputs: s111[0:2], s112[0:2], s113[0:2], 
  s121[0:2], s122[0:2], s123[0:2],
  s131[0:2], s132[0:2], s133[0:2],
  s141[0:2], s142[0:2], s143[0:2],
  s211[0:2], s212[0:2], s213[0:2], 
  s221[0:2], s222[0:2], s223[0:2],
  s231[0:2], s232[0:2], s233[0:2],
  s241[0:2], s242[0:2], s243[0:2],
  s311[0:2], s312[0:2], s313[0:2], 
  s321[0:2], s322[0:2], s323[0:2],
  s331[0:2], s332[0:2], s333[0:2],
  s341[0:2], s342[0:2], s343[0:2];
  
  s111[0] := p2111 + (p111 + p111) * o11[0] + (p112 + p121) * o21[0] 
  + (p113 + p131) * o31[0] + (p114 + p141) * o41[0];
  s111[1] := (p111 + p111) * o11[1] + (p112 + p121) * o21[1] 
  + (p113 + p131) * o31[1] + (p114 + p141) * o41[1];
  s111[2] := (p111 + p111) * o11[2] + (p112 + p121) * o21[2] 
  + (p113 + p131) * o31[2] + (p114 + p141) * o41[2];
  s112[0] := p2112 + (p111 + p111) * o12[0] + (p112 + p121) * o22[0] 
  + (p113 + p131) * o32[0] + (p114 + p141) * o42[0];
  s112[1] := (p111 + p111) * o12[1] + (p112 + p121) * o22[1] 
  + (p113 + p131) * o32[1] + (p114 + p141) * o42[1];
  s112[2] := (p111 + p111) * o12[2] + (p112 + p121) * o22[2] 
  + (p113 + p131) * o32[2] + (p114 + p141) * o42[2];
  s113[0] := p2113 + (p111 + p111) * o13[0] + (p112 + p121) * o23[0] 
  + (p113 + p131) * o33[0] + (p114 + p141) * o43[0];
  s113[1] := (p111 + p111) * o13[1] + (p112 + p121) * o23[1] 
  + (p113 + p131) * o33[1] + (p114 + p141) * o43[1];
  s113[2] := (p111 + p111) * o13[2] + (p112 + p121) * o23[2] 
  + (p113 + p131) * o33[2] + (p114 + p141) * o43[2];
  s121[0] := p2121 + (p121 + p112) * o11[0] + (p122 + p122) * o21[0]
  + (p123 + p132) * o31[0] + (p124 + p142) * o41[0];
  s121[1] := (p121 + p112) * o11[1] + (p122 + p122) * o21[1]
  + (p123 + p132) * o31[1] + (p124 + p142) * o41[1];
  s121[2] := (p121 + p112) * o11[2] + (p122 + p122) * o21[2]
  + (p123 + p132) * o31[2] + (p124 + p142) * o41[2];
  s122[0] := p2122 + (p121 + p112) * o12[0] + (p122 + p122) * o22[0]
  + (p123 + p132) * o32[0] + (p124 + p142) * o42[0];
  s122[1] := (p121 + p112) * o12[1] + (p122 + p122) * o22[1]
  + (p123 + p132) * o32[1] + (p124 + p142) * o42[1];
  s122[2] := (p121 + p112) * o12[2] + (p122 + p122) * o22[2]
  + (p123 + p132) * o32[2] + (p124 + p142) * o42[2];
  s123[0] := p2123 + (p121 + p112) * o13[0] + (p122 + p122) * o23[0]
  + (p123 + p132) * o33[0] + (p124 + p142) * o43[0];
  s123[1] := (p121 + p112) * o13[1] + (p122 + p122) * o23[1]
  + (p123 + p132) * o33[1] + (p124 + p142) * o43[1];
  s123[2] := (p121 + p112) * o13[2] + (p122 + p122) * o23[2]
  + (p123 + p132) * o33[2] + (p124 + p142) * o43[2];
  s131[0] := p2131 + (p131 + p113) * o11[0] + (p132 + p123) * o21[0]
  + (p133 + p133) * o31[0] + (p134 + p143) * o41[0];
  s131[1] := (p131 + p113) * o11[1] + (p132 + p123) * o21[1]
  + (p133 + p133) * o31[1] + (p134 + p143) * o41[1];
  s131[2] := (p131 + p113) * o11[2] + (p132 + p123) * o21[2]
  + (p133 + p133) * o31[2] + (p134 + p143) * o41[2];
  s132[0] := p2132 + (p131 + p113) * o12[0] + (p132 + p123) * o22[0]
  + (p133 + p133) * o32[0] + (p134 + p143) * o42[0];
  s132[1] := (p131 + p113) * o12[1] + (p132 + p123) * o22[1]
  + (p133 + p133) * o32[1] + (p134 + p143) * o42[1];
  s132[2] := (p131 + p113) * o12[2] + (p132 + p123) * o22[2]
  + (p133 + p133) * o32[2] + (p134 + p143) * o42[2];
  s133[0] := p2133 + (p131 + p113) * o13[0] + (p132 + p123) * o23[0]
  + (p133 + p133) * o33[0] + (p134 + p143) * o43[0];
  s133[1] := (p131 + p113) * o13[1] + (p132 + p123) * o23[1]
  + (p133 + p133) * o33[1] + (p134 + p143) * o43[1];
  s133[2] := (p131 + p113) * o13[2] + (p132 + p123) * o23[2]
  + (p133 + p133) * o33[2] + (p134 + p143) * o43[2];
  s141[0] := p2141 + (p141 + p114) * o11[0] + (p142 + p124) * o21[0]
  + (p143 + p134) * o31[0] + (p144 + p144) * o41[0];
  s141[1] := (p141 + p114) * o11[1] + (p142 + p124) * o21[1]
  + (p143 + p134) * o31[1] + (p144 + p144) * o41[1];
  s141[2] := (p141 + p114) * o11[2] + (p142 + p124) * o21[2]
  + (p143 + p134) * o31[2] + (p144 + p144) * o41[2];
  s142[0] := p2142 + (p141 + p114) * o12[0] + (p142 + p124) * o22[0]
  + (p143 + p134) * o32[0] + (p144 + p144) * o42[0];
  s142[1] := (p141 + p114) * o12[1] + (p142 + p124) * o22[1]
  + (p143 + p134) * o32[1] + (p144 + p144) * o42[1];
  s142[2] := (p141 + p114) * o12[2] + (p142 + p124) * o22[2]
  + (p143 + p134) * o32[2] + (p144 + p144) * o42[2];
  s143[0] := p2143 + (p141 + p114) * o13[0] + (p142 + p124) * o23[0]
  + (p143 + p134) * o33[0] + (p144 + p144) * o43[0];
  s143[1] := (p141 + p114) * o13[1] + (p142 + p124) * o23[1]
  + (p143 + p134) * o33[1] + (p144 + p144) * o43[1];
  s143[2] := (p141 + p114) * o13[2] + (p142 + p124) * o23[2]
  + (p143 + p134) * o33[2] + (p144 + p144) * o43[2];
  
  s211[0] := p2211 + (p211 + p211) * o11[0] + (p212 + p221) * o21[0] 
  + (p213 + p231) * o31[0] + (p214 + p241) * o41[0];
  s211[1] := (p211 + p211) * o11[1] + (p212 + p221) * o21[1] 
  + (p213 + p231) * o31[1] + (p214 + p241) * o41[1];
  s211[2] := (p211 + p211) * o11[2] + (p212 + p221) * o21[2] 
  + (p213 + p231) * o31[2] + (p214 + p241) * o41[2];
  s212[0] := p2212 + (p211 + p211) * o12[0] + (p212 + p221) * o22[0] 
  + (p213 + p231) * o32[0] + (p214 + p241) * o42[0];
  s212[1] := (p211 + p211) * o12[1] + (p212 + p221) * o22[1] 
  + (p213 + p231) * o32[1] + (p214 + p241) * o42[1];
  s212[2] := (p211 + p211) * o12[2] + (p212 + p221) * o22[2] 
  + (p213 + p231) * o32[2] + (p214 + p241) * o42[2];
  s213[0] := p2213 + (p211 + p211) * o13[0] + (p212 + p221) * o23[0] 
  + (p213 + p231) * o33[0] + (p214 + p241) * o43[0];
  s213[1] := (p211 + p211) * o13[1] + (p212 + p221) * o23[1] 
  + (p213 + p231) * o33[1] + (p214 + p241) * o43[1];
  s213[2] := (p211 + p211) * o13[2] + (p212 + p221) * o23[2] 
  + (p213 + p231) * o33[2] + (p214 + p241) * o43[2];
  s221[0] := p2221 + (p221 + p212) * o11[0] + (p222 + p222) * o21[0]
  + (p223 + p232) * o31[0] + (p224 + p242) * o41[0];
  s221[1] := (p221 + p212) * o11[1] + (p222 + p222) * o21[1]
  + (p223 + p232) * o31[1] + (p224 + p242) * o41[1];
  s221[2] := (p221 + p212) * o11[2] + (p222 + p222) * o21[2]
  + (p223 + p232) * o31[2] + (p224 + p242) * o41[2];
  s222[0] := p2222 + (p221 + p212) * o12[0] + (p222 + p222) * o22[0]
  + (p223 + p232) * o32[0] + (p224 + p242) * o42[0];
  s222[1] := (p221 + p212) * o12[1] + (p222 + p222) * o22[1]
  + (p223 + p232) * o32[1] + (p224 + p242) * o42[1];
  s222[2] := (p221 + p212) * o12[2] + (p222 + p222) * o22[2]
  + (p223 + p232) * o32[2] + (p224 + p242) * o42[2];
  s223[0] := p2223 + (p221 + p212) * o13[0] + (p222 + p222) * o23[0]
  + (p223 + p232) * o33[0] + (p224 + p242) * o43[0];
  s223[1] := (p221 + p212) * o13[1] + (p222 + p222) * o23[1]
  + (p223 + p232) * o33[1] + (p224 + p242) * o43[1];
  s223[2] := (p221 + p212) * o13[2] + (p222 + p222) * o23[2]
  + (p223 + p232) * o33[2] + (p224 + p242) * o43[2];
  s231[0] := p2231 + (p231 + p213) * o11[0] + (p232 + p223) * o21[0]
  + (p233 + p233) * o31[0] + (p234 + p243) * o41[0];
  s231[1] := (p231 + p213) * o11[1] + (p232 + p223) * o21[1]
  + (p233 + p233) * o31[1] + (p234 + p243) * o41[1];
  s231[2] := (p231 + p213) * o11[2] + (p232 + p223) * o21[2]
  + (p233 + p233) * o31[2] + (p234 + p243) * o41[2];
  s232[0] := p2232 + (p231 + p213) * o12[0] + (p232 + p223) * o22[0]
  + (p233 + p233) * o32[0] + (p234 + p243) * o42[0];
  s232[1] := (p231 + p213) * o12[1] + (p232 + p223) * o22[1]
  + (p233 + p233) * o32[1] + (p234 + p243) * o42[1];
  s232[2] := (p231 + p213) * o12[2] + (p232 + p223) * o22[2]
  + (p233 + p233) * o32[2] + (p234 + p243) * o42[2];
  s233[0] := p2233 + (p231 + p213) * o13[0] + (p232 + p223) * o23[0]
  + (p233 + p233) * o33[0] + (p234 + p243) * o43[0];
  s233[1] := (p231 + p213) * o13[1] + (p232 + p223) * o23[1]
  + (p233 + p233) * o33[1] + (p234 + p243) * o43[1];
  s233[2] := (p231 + p213) * o13[2] + (p232 + p223) * o23[2]
  + (p233 + p233) * o33[2] + (p234 + p243) * o43[2];
  s241[0] := p2241 + (p241 + p214) * o11[0] + (p242 + p224) * o21[0]
  + (p243 + p234) * o31[0] + (p244 + p244) * o41[0];
  s241[1] := (p241 + p214) * o11[1] + (p242 + p224) * o21[1]
  + (p243 + p234) * o31[1] + (p244 + p244) * o41[1];
  s241[2] := (p241 + p214) * o11[2] + (p242 + p224) * o21[2]
  + (p243 + p234) * o31[2] + (p244 + p244) * o41[2];
  s242[0] := p2242 + (p241 + p214) * o12[0] + (p242 + p224) * o22[0]
  + (p243 + p234) * o32[0] + (p244 + p244) * o42[0];
  s242[1] := (p241 + p214) * o12[1] + (p242 + p224) * o22[1]
  + (p243 + p234) * o32[1] + (p244 + p244) * o42[1];
  s242[2] := (p241 + p214) * o12[2] + (p242 + p224) * o22[2]
  + (p243 + p234) * o32[2] + (p244 + p244) * o42[2];
  s243[0] := p2243 + (p241 + p214) * o13[0] + (p242 + p224) * o23[0]
  + (p243 + p234) * o33[0] + (p244 + p244) * o43[0];
  s243[1] := (p241 + p214) * o13[1] + (p242 + p224) * o23[1]
  + (p243 + p234) * o33[1] + (p244 + p244) * o43[1];
  s243[2] := (p241 + p214) * o13[2] + (p242 + p224) * o23[2]
  + (p243 + p234) * o33[2] + (p244 + p244) * o43[2];
  
  s311[0] := p2311 + (p311 + p311) * o11[0] + (p312 + p321) * o21[0] 
  + (p313 + p331) * o31[0] + (p314 + p341) * o41[0];
  s311[1] := (p311 + p311) * o11[1] + (p312 + p321) * o21[1] 
  + (p313 + p331) * o31[1] + (p314 + p341) * o41[1];
  s311[2] := (p311 + p311) * o11[2] + (p312 + p321) * o21[2] 
  + (p313 + p331) * o31[2] + (p314 + p341) * o41[2];
  s312[0] := p2312 + (p311 + p311) * o12[0] + (p312 + p321) * o22[0] 
  + (p313 + p331) * o32[0] + (p314 + p341) * o42[0];
  s312[1] := (p311 + p311) * o12[1] + (p312 + p321) * o22[1] 
  + (p313 + p331) * o32[1] + (p314 + p341) * o42[1];
  s312[2] := (p311 + p311) * o12[2] + (p312 + p321) * o22[2] 
  + (p313 + p331) * o32[2] + (p314 + p341) * o42[2];
  s313[0] := p2313 + (p311 + p311) * o13[0] + (p312 + p321) * o23[0] 
  + (p313 + p331) * o33[0] + (p314 + p341) * o43[0];
  s313[1] := (p311 + p311) * o13[1] + (p312 + p321) * o23[1] 
  + (p313 + p331) * o33[1] + (p314 + p341) * o43[1];
  s313[2] := (p311 + p311) * o13[2] + (p312 + p321) * o23[2] 
  + (p313 + p331) * o33[2] + (p314 + p341) * o43[2];
  s321[0] := p2321 + (p321 + p312) * o11[0] + (p322 + p322) * o21[0]
  + (p323 + p332) * o31[0] + (p324 + p342) * o41[0];
  s321[1] := (p321 + p312) * o11[1] + (p322 + p322) * o21[1]
  + (p323 + p332) * o31[1] + (p324 + p342) * o41[1];
  s321[2] := (p321 + p312) * o11[2] + (p322 + p322) * o21[2]
  + (p323 + p332) * o31[2] + (p324 + p342) * o41[2];
  s322[0] := p2322 + (p321 + p312) * o12[0] + (p322 + p322) * o22[0]
  + (p323 + p332) * o32[0] + (p324 + p342) * o42[0];
  s322[1] := (p321 + p312) * o12[1] + (p322 + p322) * o22[1]
  + (p323 + p332) * o32[1] + (p324 + p342) * o42[1];
  s322[2] := (p321 + p312) * o12[2] + (p322 + p322) * o22[2]
  + (p323 + p332) * o32[2] + (p324 + p342) * o42[2];
  s323[0] := p2323 + (p321 + p312) * o13[0] + (p322 + p322) * o23[0]
  + (p323 + p332) * o33[0] + (p324 + p342) * o43[0];
  s323[1] := (p321 + p312) * o13[1] + (p322 + p322) * o23[1]
  + (p323 + p332) * o33[1] + (p324 + p342) * o43[1];
  s323[2] := (p321 + p312) * o13[2] + (p322 + p322) * o23[2]
  + (p323 + p332) * o33[2] + (p324 + p342) * o43[2];
  s331[0] := p2331 + (p331 + p313) * o11[0] + (p332 + p323) * o21[0]
  + (p333 + p333) * o31[0] + (p334 + p343) * o41[0];
  s331[1] := (p331 + p313) * o11[1] + (p332 + p323) * o21[1]
  + (p333 + p333) * o31[1] + (p334 + p343) * o41[1];
  s331[2] := (p331 + p313) * o11[2] + (p332 + p323) * o21[2]
  + (p333 + p333) * o31[2] + (p334 + p343) * o41[2];
  s332[0] := p2332 + (p331 + p313) * o12[0] + (p332 + p323) * o22[0]
  + (p333 + p333) * o32[0] + (p334 + p343) * o42[0];
  s332[1] := (p331 + p313) * o12[1] + (p332 + p323) * o22[1]
  + (p333 + p333) * o32[1] + (p334 + p343) * o42[1];
  s332[2] := (p331 + p313) * o12[2] + (p332 + p323) * o22[2]
  + (p333 + p333) * o32[2] + (p334 + p343) * o42[2];
  s333[0] := p2333 + (p331 + p313) * o13[0] + (p332 + p323) * o23[0]
  + (p333 + p333) * o33[0] + (p334 + p343) * o43[0];
  s333[1] := (p331 + p313) * o13[1] + (p332 + p323) * o23[1]
  + (p333 + p333) * o33[1] + (p334 + p343) * o43[1];
  s333[2] := (p331 + p313) * o13[2] + (p332 + p323) * o23[2]
  + (p333 + p333) * o33[2] + (p334 + p343) * o43[2];
  s341[0] := p2341 + (p341 + p314) * o11[0] + (p342 + p324) * o21[0]
  + (p343 + p334) * o31[0] + (p344 + p344) * o41[0];
  s341[1] := (p341 + p314) * o11[1] + (p342 + p324) * o21[1]
  + (p343 + p334) * o31[1] + (p344 + p344) * o41[1];
  s341[2] := (p341 + p314) * o11[2] + (p342 + p324) * o21[2]
  + (p343 + p334) * o31[2] + (p344 + p344) * o41[2];
  s342[0] := p2342 + (p341 + p314) * o12[0] + (p342 + p324) * o22[0]
  + (p343 + p334) * o32[0] + (p344 + p344) * o42[0];
  s342[1] := (p341 + p314) * o12[1] + (p342 + p324) * o22[1]
  + (p343 + p334) * o32[1] + (p344 + p344) * o42[1];
  s342[2] := (p341 + p314) * o12[2] + (p342 + p324) * o22[2]
  + (p343 + p334) * o32[2] + (p344 + p344) * o42[2];
  s343[0] := p2343 + (p341 + p314) * o13[0] + (p342 + p324) * o23[0]
  + (p343 + p334) * o33[0] + (p344 + p344) * o43[0];
  s343[1] := (p341 + p314) * o13[1] + (p342 + p324) * o23[1]
  + (p343 + p334) * o33[1] + (p344 + p344) * o43[1];
  s343[2] := (p341 + p314) * o13[2] + (p342 + p324) * o23[2]
  + (p343 + p334) * o33[2] + (p344 + p344) * o43[2];
  
end

para noglitch order 2 NI M_EXPAND_SK_SO


(* mSign *)

proc M_SIGN_SO:
  public inputs: p111, p112, p113, 
  p114, p121, p122, p123, p124, p131, 
  p132, p133, p134, p141, p142, p143,
  p144, p211, p212, p213, p214, p221, 
  p222, p223, p224, p231, p232, p233, 
  p234, p241, p242, p243, p244, p311, 
  p312, p313, p314, p321, p322, p323, 
  p324, p331, p332, p333, p334, p341, 
  p342, p343, p344, t1, t2, t3
  inputs: o11[0:2], o12[0:2], o13[0:2], 
  o21[0:2], o22[0:2], o23[0:2],
  o31[0:2], o32[0:2], o33[0:2],
  o41[0:2], o42[0:2], o43[0:2],
  s111[0:2], s112[0:2], s113[0:2], 
  s121[0:2], s122[0:2], s123[0:2],
  s131[0:2], s132[0:2], s133[0:2],
  s141[0:2], s142[0:2], s143[0:2],
  s211[0:2], s212[0:2], s213[0:2], 
  s221[0:2], s222[0:2], s223[0:2],
  s231[0:2], s232[0:2], s233[0:2],
  s241[0:2], s242[0:2], s243[0:2],
  s311[0:2], s312[0:2], s313[0:2], 
  s321[0:2], s322[0:2], s323[0:2],
  s331[0:2], s332[0:2], s333[0:2],
  s341[0:2], s342[0:2], s343[0:2],
  v1[0:2], v2[0:2], v3[0:2], v4[0:2]
  outputs: y1[0:2], y2[0:2], y3[0:2],
  l11[0:2], l12[0:2], l13[0:2],
  l21[0:2], l22[0:2], l23[0:2],
  l31[0:2], l32[0:2], l33[0:2];
  
  (l11, l21, l31) = SEC_MAT_VEC_SO(s111, s121, s131, s141, 
  s112, s122, s132, s142, s113, s123, s133, s143, v1, v2,
  v3, v4);
  (l12, l22, l32) = SEC_MAT_VEC_SO(s211, s221, s231, s241, 
  s212, s222, s232, s242, s213, s223, s233, s243, v1, v2,
  v3, v4);
  (l13, l23, l33) = SEC_MAT_VEC_SO(s311, s321, s331, s341, 
  s312, s322, s332, s342, s313, s323, s333, s343, v1, v2,
  v3, v4);
  
  (y1, y2, y3) = SEC_QUAD_SO(p111, p112, p113, p114, p121, 
  p122, p123, p124, p131, p132, p133, p134, p141, p142, p143,
  p144, p211, p212, p213, p214, p221, p222, p223, p224, p231, 
  p232, p233, p234, p241, p242, p243, p244, p311, p312, p313, 
  p314, p321, p322, p323, p324, p331, p332, p333, p334, p341, 
  p342, p343, p344, v1, v2, v3, v4);
  
  y1[0] := y1[0] + t1;
  y2[0] := y2[0] + t2;
  y3[0] := y3[0] + t3;
  
end

para noglitch order 2 SNI M_SIGN_SO 


